syntax = "proto3";

package cache_transport;

message CacheGetQuery {
    string key = 1;
}
message CacheGetResponse {
    bool found = 1;
    bytes cacheable_value = 2;
}

message CachePutQuery{
	string key = 1;
	bytes value = 2;
	optional double expiry = 3;
}
message CachePutResponse{
	bool put_success = 1;
}

message CachePopQuery{
	string key = 1;
}
message CachePopResponse{
	bytes cacheable_value = 1;
	bool deleted = 2;
}

message CacheDeleteQuery{
    string key = 1;
}
message CacheDeleteResponse {
    bool deleted = 1;
}

message CacheWipeQuery{}
message CacheWipeResponse{
    int32 entries_wiped = 1;
}

message CacheStatsQuery{}
message CacheStatsResponse {
    bytes current_stats = 1;
}


service CacheService {
  // Gets the cacheable's value at key position, if it exists
  rpc Get(CacheGetQuery) returns (CacheGetResponse) {}
  // Caches a k:v pair in the cache
  rpc Put(CachePutQuery) returns (CachePutResponse) {}
  // Pops cacheable at key position
  rpc Pop(CachePopQuery) returns (CachePopResponse) {}
  // Deletes a cacheable at key position
  rpc Delete(CacheDeleteQuery) returns (CacheDeleteResponse) {}
  // Deletes all cacheables, keeps stats
  rpc Wipe(CacheWipeQuery) returns (CacheWipeResponse) {}
  // Gets cache stats
  rpc Stats(CacheStatsQuery) returns (CacheStatsResponse) {}
}
